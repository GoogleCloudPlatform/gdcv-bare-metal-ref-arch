#!/usr/bin/env bash

# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -x

# Configure Google Cloud CLI packages repository
echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -

# Install packages
apt-get update
apt-get install -y docker.io jq kubectl

# Increase max_user_watches
sysctl -w fs.inotify.max_user_watches=524288
sysctl fs.inotify.max_user_watches=524288

# Disable Uncomplicated Firewall (ufw)
ufw disable

# Add group and user
addgroup \
--gid 2000 \
${login_user}

adduser \
--disabled-password \
--gecos "${login_user} user" \
--gid 2000 \
--uid 2000 \
${login_user}

# Configure user for passwordless sudo
echo -e "${login_user}\tALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/${login_user}

# Configure user for docker sudo
usermod -aG docker ${login_user}

# Create the GDC-V user's .ssh directory
mkdir --mode=700 -p ~${login_user}/.ssh
chown ${login_user}:${login_user} ~${login_user}/.ssh
gcloud secrets versions access ${ssh_public_key_secret_version} --project ${secret_project_id} --secret ${ssh_public_key_secret_id} > ~${login_user}/.ssh/authorized_keys
chmod go-rwx ~${login_user}/.ssh/authorized_keys
chown ${login_user}:${login_user} ~${login_user}/.ssh/authorized_keys

gcloud secrets versions access ${ssh_private_key_secret_version} --project ${secret_project_id} --secret ${ssh_private_key_secret_id} > ~${login_user}/.ssh/gdcv_ssh_id_rsa
gcloud secrets versions access ${ssh_public_key_secret_version} --project ${secret_project_id}  --secret ${ssh_public_key_secret_id} > ~${login_user}/.ssh/gdcv_ssh_id_rsa.pub
cp -p ~${login_user}/.ssh/gdcv_ssh_id_rsa.pub ~${login_user}/.ssh/gdcv_ssh_id_rsa-cert.pub
chmod go-rwx ~${login_user}/.ssh/gdcv_ssh_id_rsa*
chown ${login_user}:${login_user} ~${login_user}/.ssh/gdcv_ssh_id_rsa*

# Create the service account keys directory
mkdir --mode=700 -p ~${login_user}/keys
chown ${login_user}:${login_user} ~${login_user}/keys

exit 0
